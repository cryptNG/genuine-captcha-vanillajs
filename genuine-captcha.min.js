export default class GenuineCaptcha extends HTMLElement{captchaSecret=null;timerId=null;name='';gcApiUrl=`https://api.genuine-captcha.io`;handleVerify=(a,b,c)=>{};handleReset=a=>{};_handleVerify=(a,A)=>{this.name!==''?this.handleVerify(this.name,a,A):this.handleVerify(a,A)};_handleReset=()=>{this.name!==''?this.handleReset(this.name):this.handleReset()};constructor(){super();this.abortController=new AbortController;this.texts={};navigator.language.toLowerCase().indexOf('de')===0&&(this.texts={puzzleTitle:'Kleines Rätsel: Was ist die Lösung?',inputPlaceholder:'Deine Antwort',verifyButton:'Überprüfen',verifying:'Prüfend...',refreshButton:'Neues CAPTCHA',loadingCaptcha:'Lade CAPTCHA...',errorLoadingCaptcha:'Fehler beim Laden des CAPTCHAs. Bitte versuche es erneut.',errorIncorrectSolution:'Falsche Lösung. Bitte versuche es erneut.',errorFailedToVerify:'Fehler bei der Überprüfung. Bitte versuche es erneut.',successMessage:'Erfolg! CAPTCHA korrekt gelöst.',alertNoSolution:'Bitte gib deine Antwort zum CAPTCHA ein',responseOk:'<strong>Erfolg!</strong> CAPTCHA korrekt gelöst.',responseNotOk:'<strong>Fehler:</strong> Falsche Lösung. Bitte versuche es erneut.',responseFailedToVerify:'<strong>Fehler:</strong> Fehler bei der Überprüfung. Bitte versuche es erneut.'});(navigator.language.toLowerCase().indexOf('en')===0||this.texts.puzzleTitle===void 0)&&(this.texts={puzzleTitle:'Tiny puzzle time: what is the solution?',inputPlaceholder:'Your answer',verifyButton:'Verify',verifying:'Verifying...',refreshButton:'Try Another CAPTCHA',loadingCaptcha:'Loading CAPTCHA...',errorLoadingCaptcha:'Error loading CAPTCHA. Please try again.',errorIncorrectSolution:'Incorrect solution. Please try again.',errorFailedToVerify:'Failed to verify. Please try again.',successMessage:'Success! CAPTCHA verified correctly.',alertNoSolution:'Please enter your answer to the CAPTCHA',responseOk:'<strong>Success!</strong> CAPTCHA verified correctly.',responseNotOk:'<strong>Error:</strong> Incorrect solution. Please try again.',responseFailedToVerify:'<strong>Error:</strong> Failed to verify. Please try again.'});this.captchaSecret='';let _=document.getElementById('genuine-captcha'),B=_.content,d=document.createElement('style');this.attachShadow({mode:'open'});let C=this.shadowRoot;d.textContent=`
          :host{
            --verify-button-background-color:#6366f1;
            --verify-button-background-color-hover:#4346d4;
          }

          .captcha-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            width:100%;
        }
          #captcha-display {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }
        
        #captcha-image-container {
            position: relative;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            overflow: hidden;
        }
        
        #captcha-image {
            max-width: 100%;
            display: none;
        }
        
        #captcha-loading {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
        }
        
        .spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top: 4px solid #6366f1;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin-bottom: 10px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .input-group {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }
        
        input {
            padding: 8px 12px;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
        }

        #allowed-action{
          display: flex;
          flex-direction: column;
          align-items: center;
        }
        
        button {
            padding: 8px 16px;
            background-color: var(--verify-button-background-color);
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        button:hover {
            background-color: var(--verify-button-background-color-hover);
        }
        
        #captcha-error {
            padding: 15px;
            border-radius: 6px;
            display: none;
            margin-top: 15px;
            width: 100%;
        }

        .captcha-result {
            padding: 15px;
            border-radius: 6px;
            display: block;
            margin-bottom: 15px;
            width: 100%;
        }
        
        .success {
            background-color: rgba(16, 185, 129, 0.1);
            color: #10b981;
            padding: 15px;
            border-radius: 6px;
            display: block;
            margin-bottom: 15px;
           
        }
        
        .error {
            background-color: rgba(239, 68, 68, 0.1);
            color: #ef4444;
        }
      `;C.appendChild(d);C.appendChild(B.cloneNode(!0));C.querySelector('#captcha-solution').setAttribute('aria-label',this.texts.inputPlaceholder);C.querySelector('#verify-captcha').setAttribute('aria-label',this.texts.verifyButton);let e=document.createElement('div');e.setAttribute('role','status');e.setAttribute('aria-live','polite');e.style.position='absolute';e.style.left='-10000px';e.id='sr-announcements';C.appendChild(e);C.querySelector('.captcha-container #puzzle-title').innerText=this.texts.puzzleTitle;C.querySelector('.captcha-container #captcha-solution').placeholder=this.texts.inputPlaceholder;C.querySelector('.captcha-container #verify-captcha').innerText=this.texts.verifyButton;C.querySelector('.captcha-container #refresh-captcha').innerText=this.texts.refreshButton;C.querySelector('.captcha-container #loading-catcha').innerText=this.texts.loadingCaptcha;this.registerHandleVerify();this.registerHandleReset();this.refreshHandler=_a=>{_a.stopPropagation();this._handleReset();this.loadCaptcha()};this.verifyHandler=D=>{D.stopPropagation();this.verifyCaptcha()};this.shadowRoot.querySelector('#refresh-captcha').addEventListener('click',this.refreshHandler);this.shadowRoot.querySelector('#verify-captcha').addEventListener('click',this.verifyHandler);(async ()=>{await b(100);this.loadCaptcha()})()}registerHandleVerify=async ()=>{let _A=0,_b=150;while(window.genuineCaptchaHandleVerify===void 0&&_A<_b){_A++;await b(100)}window.genuineCaptchaHandleVerify?this.handleVerify=window.genuineCaptchaHandleVerify:console.warn('genuineCaptchaHandleVerify hook not found, using default')};registerHandleReset=async ()=>{while(window.genuineCaptchaReset===void 0)await b(100);this.handleReset=window.genuineCaptchaReset};static get observedAttributes(){return['api-url','api-key','name']}attributeChangedCallback(E,_B,_c){E==='api-url'&&(this.gcApiUrl=_c);E==='name'&&(this.name=_c)}startTimer=aA=>{clearTimeout(this.timerId);this.timerId=setTimeout(()=>this.loadCaptcha(),aA)};disconnectedCallback(){this.timerId&&(clearTimeout(this.timerId),this.timerId=null);this.abortController?.abort();this.refreshHandler&&this.shadowRoot.querySelector('#refresh-captcha')?.removeEventListener('click',this.refreshHandler);this.verifyHandler&&this.shadowRoot.querySelector('#verify-captcha')?.removeEventListener('click',this.verifyHandler)}loadCaptcha(){this.abortController?.abort();this.abortController=new AbortController;if(this.isLoading){console.log('Captcha already loading');return}this.isLoading=!0;this.timerId&&(clearTimeout(this.timerId),this.timerId=null);try{this.shadowRoot.getElementById('captcha-loading').style.display='block';this.shadowRoot.getElementById('captcha-image').style.display=this.shadowRoot.getElementById('captcha-input-container').style.display=this.shadowRoot.getElementById('captcha-error').style.display='none';this.shadowRoot.getElementById('captcha-error').classList.remove('error');this.shadowRoot.getElementById('allowed-action').style.display='none';this.shadowRoot.querySelector('.captcha-result').classList.remove('success');this.shadowRoot.getElementById('refresh-captcha').style.display='none';this.shadowRoot.getElementById('captcha-solution').value='';this.shadowRoot.getElementById('captcha-display').style.display='flex'}catch(aB){console.error(aB);this.isLoading=!1;return}fetch(`${this.gcApiUrl}/api/captcha/create`,{mode:'cors',signal:this.abortController.signal}).then(aC=>aC.json()).then(aD=>{if(!aD||!aD.ImageAsBase64||!aD.SecretAsBase64){console.error('Invalid captcha response format');return}let aE='image/png';this.shadowRoot.getElementById('captcha-image').src=`data:${aE};base64,${aD.ImageAsBase64}`;this.captchaSecret=aD.SecretAsBase64;let _C=(aD.validTill||Date.now()+(1000*60*5))-2000;this.startTimer(_C-Date.now());this.shadowRoot.getElementById('captcha-image').style.display='block';this.shadowRoot.getElementById('captcha-loading').style.display='none';this.shadowRoot.getElementById('captcha-input-container').style.display='block';this.shadowRoot.getElementById('refresh-captcha').style.display='inline-block'}).catch(aF=>{if(aF.name==='AbortError'){console.log('Captcha load aborted');return}console.error('Error loading captcha:',aF);this.shadowRoot.getElementById('captcha-loading').innerHTML=this.texts.errorLoadingCaptcha}).finally(()=>this.isLoading=!1)}verifyCaptcha(){if(this.isVerifying)return;let aG=this.shadowRoot.getElementById('captcha-solution').value.trim(),aI=this.shadowRoot.getElementById('verify-captcha'),_d=aI.textContent;if(!aG){let aJ=this.shadowRoot.getElementById('captcha-error');aJ.style.display='block';aJ.classList.add('error');aJ.textContent=this.texts.alertNoSolution;let aK=this.shadowRoot.getElementById('sr-announcements');aK.textContent=this.texts.alertNoSolution;this.shadowRoot.getElementById('captcha-solution').focus();return}let aH=aG.replace(/[^\w\s-]/g,'');if(aH.length>3)return;this.isVerifying=!0;aI.disabled=!0;aI.textContent=this.texts.verifying;fetch(`${this.gcApiUrl}/api/captcha/verify?captchaSolution=${aH}&captchaSecret=${encodeURIComponent(this.captchaSecret)}`,{mode:'cors',signal:this.abortController.signal}).then(aL=>{if(aL.ok){this.shadowRoot.getElementById('allowed-action').style.display='flex';let aM=this.shadowRoot.querySelector('.captcha-result');aM.classList.add('success');aM.innerHTML=this.texts.responseOk;this.shadowRoot.getElementById('captcha-error').style.display=this.shadowRoot.getElementById('captcha-display').style.display=this.shadowRoot.getElementById('captcha-input-container').style.display='none';this._handleVerify(aG,this.captchaSecret)}else{let aN=this.shadowRoot.getElementById('captcha-error');aN.style.display='block';aN.classList.add('error');aN.innerHTML=this.texts.responseNotOk}}).catch(aO=>{if(aO.name==='AbortError'){console.log('Captcha load aborted');return}console.error('Error verifying captcha:',aO);let aP=this.shadowRoot.getElementById('captcha-error');aP.style.display='block';aP.classList.add('error');aP.innerHTML=this.texts.responseFailedToVerify}).finally(()=>{this.isVerifying=aI.disabled=!1;aI.textContent=_d})}}function b(aQ){return new Promise(aR=>setTimeout(aR,aQ))}let c=`<div class="captcha-container">
        <div id="captcha-display">
            <div id="captcha-image-container">
                <img id="captcha-image" alt="CAPTCHA Challenge" src="" loading="lazy"/>
                <div id="captcha-loading" style="display: none;">
                    <div class="spinner"></div>
                    <p id="loading-catcha"></p>
                </div>
            </div>
            
            <div id="captcha-input-container" style="display: block;">
                <p id="puzzle-title">Tiny puzzle time: what is the solution?</p>
                <div class="input-group">
                    <input type="text" id="captcha-solution" placeholder="">
                    <button id="verify-captcha"></button>
                </div>
            </div>
            
            <div id="captcha-error" style="display: none;"></div>
            
            <button id="refresh-captcha" style="display: inline-block;"></button>
        </div>
        <div id="allowed-action" style="display: none;">
            <div class="captcha-result"></div>
        <slot></slot></div>
        
    </div>`;if(typeof document!=='undefined')if(customElements.get('genuine-captcha'))console.warn('genuine-captcha already defined');else{let aS=()=>{if(!document.getElementById('genuine-captcha')){let aT=document.createElement('template');aT.id='genuine-captcha';aT.innerHTML=c;document.body?document.body.prepend(aT):document.addEventListener('DOMContentLoaded',()=>document.body.prepend(aT))}};document.readyState==='loading'?document.addEventListener('DOMContentLoaded',aS):aS();customElements.define('genuine-captcha',GenuineCaptcha)}export{GenuineCaptcha};
